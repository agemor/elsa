/**
* Orca Standard API
*/
define string -> length() -> number {
	return this ? 1;
}

define string -> charAt(index:number) -> string {
	return this[index];
}


define string -> charCodeAt(index:number) -> number {
	return this[index] ? 2;
}

define string -> indexOf(str:string) -> number {
	var length:number = this -> length();
	for(i in 0...length - 1){
		if(this -> charAt(i) == str){
			return i;
		}
	}
	return -1;
}

define string -> lastIndexOf(str:string) -> number {
	var length:number = this -> length();
	for(i in 0...length - 1){
		if(this -> charAt(length - 1 - i) == str){
			return length - 1 - i;
		}
	}
	return -1;
}

define string -> substring(startIndex:number, endIndex:number) -> string {
	var result:string = "";
	var length:number = this -> length();
	for(i in startIndex...endIndex - 1){
		result += this -> charAt(i);
	}
	return result;
}

define string -> split(delimiter:string) -> array {
	var result:array;
	var length:number = this -> length();
	var prevIndex:number = 0;
	var resultIndex:number = 0;
	
	for(i in 0...length - 1){		
		if(this -> charAt(i) == delimiter){			
			result[resultIndex++] = this -> substring(prevIndex, i);
			prevIndex = i + 1;
		}
	}
	return result;
}